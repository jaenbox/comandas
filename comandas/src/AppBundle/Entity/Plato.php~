<?php
// src/AppBundle/Entity/Plato.php

namespace AppBundle\Entity;

use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 *
 * @author jaen
 *
 * @ORM\Entity
 * @ORM\Table(name="plato")
 *
 */
class Plato {
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     *
     */
    protected $id;
    /**
     * @ORM\Column(type="string", length=100, unique=true)
     * @Assert\NotBlank()
     *
     */
    protected $name;
    /**
     * @ORM\Column(type="decimal", scale=2)
     * @Assert\NotBlank()
     */
    protected $price;
    /**
     * @ORM\Column(type="string",length=255, nullable=true)
     *
     */
    protected $path;
    /**
     * @ORM\Column(type="text")
     */
    protected $description;
    /**
     * @ORM\Column(type="text")
     * @Assert\File(maxSize="6000000")
     */
    protected $file;
    
    // Getters & Setters
    
    /**
     * @return the $id
     */
    public function getId()
    {
        return $this->id;
    }
    
    /**
     * @return the $name
     */
    public function getName()
    {
        return $this->name;
    }
    
    /**
     * @return the $price
     */
    public function getPrice()
    {
        return $this->price;
    }
    
    /**
     * @return the $img
     */
    public function getPath()
    {
        return $this->path;
    }
    
    /**
     * @return the $description
     */
    public function getDescription()
    {
        return $this->description;
    }
    
    /**
     * Get file.
     *
     * @return UploadedFile
     */
    public function getFile()
    {
        return $this->file;
    }
    
    /**
     * @param field_type $id
     */
    public function setId($id)
    {
        $this->id = $id;
    }
    
    /**
     * @param field_type $name
     */
    public function setName($name)
    {
        $this->name = $name;
    }
    
    /**
     * @param field_type $price
     */
    public function setPrice($price)
    {
        $this->price = $price;
    }
    
    /**
     * @param field_type $img
     */
    public function setPath($file)
    {
        $this->path = $file;
    }
    
    /**
     * @param field_type $description
     */
    public function setDescription($description)
    {
        $this->description = $description;
    }
    /**
     * Sets file.
     *
     * @param UploadedFile $file
     */
    public function setFile(UploadedFile $file = null)
    {
        $this->file = $file;
    }
    
    
    /*
     * Métodos para controlar img
     * */
    
    /**
     * Ruta absoluta al archivo
     */
    public function getAbsolutePath()
    {
        return null === $this->path
        ? null
        : $this->getUploadRootDir().'/'.$this->path;
    }
    
    public function getWebPath()
    {
        return null === $this->path
        ? null
        : $this->getUploadDir().'/'.$this->path;
    }
    
    protected function getUploadRootDir()
    {
        // la ruta absoluta del directorio donde se deben
        // guardar los archivos cargados
        return __DIR__.'/../../../../web/'.$this->getUploadDir();
    }
    
    protected function getUploadDir()
    {
        // se deshace del __DIR__ para no meter la pata
        // al mostrar el documento/imagen cargada en la vista.
        return 'uploads/documents';
    }
    
    public function upload()
    {
        // the file property can be empty if the field is not required
        if (null === $this->getFile()) {
            return;
        }
        
        // aquí usa el nombre de archivo original pero lo debes
        // sanear al menos para evitar cualquier problema de seguridad
        
        // move takes the target directory and then the
        // target filename to move to
        $this->getFile()->move(
            $this->getUploadRootDir(),
            $this->getFile()->getClientOriginalName()
            );
        
        // set the path property to the filename where you've saved the file
        $this->path = $this->getFile()->getClientOriginalName();
        
        // limpia la propiedad «file» ya que no la necesitas más
        $this->file = null;
    }
    
}